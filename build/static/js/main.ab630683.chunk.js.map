{"version":3,"sources":["components/layouts/NavBar.js","components/layouts/spinner.gif","components/layouts/Spinner.js","components/Article.js","components/Articles.js","components/TopStory.js","components/TopStories.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","header","backgroundColor","color","boxShadow","NavBar","classes","className","AppBar","position","Toolbar","variant","IconButton","edge","aria-label","Typography","Spinner","src","spinner","alt","style","width","margin","display","card","maxWidth","height","media","Article","article","Card","id","_id","CardMedia","component","multimedia","url","CardContent","href","web_url","target","rel","textDecoration","headline","main","byline","original","snippet","Articles","loading","articles","Grid","container","map","item","xs","sm","TopStory","topstory","title","abstract","buttons","TopStories","topStories","getTopArticles","useEffect","Button","onClick","to","Link","Search","searchArticles","useState","text","setText","onSubmit","e","preventDefault","TextField","label","type","name","value","onChange","InputProps","endAdornment","InputAdornment","App","setLoading","setArticles","setTopStories","a","axios","get","process","res","data","response","docs","getArticles","section","results","Container","gutterBottom","align","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ab630683.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    header: {\n        backgroundColor: \"transparent\",\n        color: \"black\",\n        boxShadow: \"0px 0px 0px 0px\"\n    }\n}));\n\nexport default function NavBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root} >\n            <AppBar position=\"static\" className={classes.header}>\n                <Toolbar variant=\"dense\">\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        News from the NYTimes\n          </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/spinner.7ca42b2c.gif\";","import React from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => {\n    return (\n        <>\n            <img src={spinner}\n                alt=\"loading...\"\n                style={{ width: '200px', margin: 'auto', display: 'block' }}\n            />\n        </>\n    );\n};\n\nexport default Spinner;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 345,\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"#fafafa\",\n        height: 600\n    },\n    media: {\n        height: 300\n    },\n});\n\nconst Article = ({ article }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root} >\n            {article && (\n                <Card className={classes.card} id={article._id}>\n                    <CardMedia className={classes.media} component=\"img\" src={article.multimedia?.[0]?.url ?\n                        //does 0 element exist? if exists, show url\n                        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\n                        `https://nytimes.com/${article.multimedia[0].url}` : 'https://upload.wikimedia.org/wikipedia/commons/4/40/New_York_Times_logo_variation.jpg'\n                    } alt=\"news-img\" />\n                    <CardContent>\n                        <Typography color=\"primary\" variant=\"h6\">\n                            <a href={article.web_url} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'none' }}>\n                                {article.headline.main}</a>\n                        </Typography>\n                        <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                            {article.byline.original}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            <br />\n                            {article.snippet}\n                        </Typography>\n                    </CardContent>\n                </Card >\n            )}\n        </div>\n    );\n};\n\nArticle.propTypes = {\n    article: PropTypes.object.isRequired,\n};\n\nexport default Article;\n","import React from 'react';\nimport Spinner from './layouts/Spinner';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Article from './Article.js';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 345,\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"#fafafa\",\n    },\n    media: {\n        height: 300,\n    },\n});\n\nexport default function Articles({ loading, articles }) {\n    const classes = useStyles();\n\n    return (\n        <>\n            {\n                loading ? (\n                    <Spinner />\n                ) : (\n                        <div className={classes.root} >\n                            <Grid container spacing={3}>\n                                {articles.map((article) => (\n                                    <Grid item xs={12} sm={4} key={article._id}>\n                                        <Article article={article} />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </div>)}\n        </>\n    );\n}\n\nArticles.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    articles: PropTypes.array.isRequired,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 345,\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"#fafafa\",\n        height: 500\n    },\n    media: {\n        height: 300,\n    },\n});\n\nconst TopStory = ({ topstory }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root} >\n            {topstory && (\n                <Card className={classes.card} id={topstory.url}>\n                    <CardMedia className={classes.media} component=\"img\" src={topstory.multimedia?.[0]?.url ?\n                        `https://nyt.com/${topstory.multimedia[0].url}` : 'https://upload.wikimedia.org/wikipedia/commons/4/40/New_York_Times_logo_variation.jpg'\n                    } alt=\"news-img\" />\n                    <CardContent>\n                        <Typography color=\"primary\" variant=\"h6\">\n                            <a href={topstory.url} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'none' }}>\n                                {topstory.title}</a>\n                        </Typography>\n                        <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                            {topstory.byline}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            <br />\n                            {topstory.abstract}\n                        </Typography>\n                    </CardContent>\n                </Card >\n            )}\n        </div>\n    );\n};\n\nTopStory.propTypes = {\n    topstory: PropTypes.object.isRequired,\n};\nexport default TopStory;\n","import React, { useEffect } from 'react';\nimport TopStory from './TopStory';\nimport Spinner from './layouts/Spinner';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { NavLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: 345,\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"#fafafa\",\n    },\n    media: {\n        height: 300,\n    },\n    buttons: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nfunction TopStories({ loading, topStories, getTopArticles }) {\n    const classes = useStyles();\n    useEffect(() => {\n        getTopArticles('world');\n    }, [getTopArticles]);\n\n    return (\n        <>\n            { loading ?\n                (\n                    <Spinner /> // or instead just type \"Loading\"\n                ) : (\n                    <>\n                        <div className={classes.buttons}>\n                            <Button onClick={() => { getTopArticles('world'); }} variant=\"outlined\" color=\"primary\">World News</Button>\n                            <Button onClick={() => { getTopArticles('technology'); }} variant=\"outlined\" color=\"secondary\">Technology</Button>\n                            <Button onClick={() => { getTopArticles('us'); }} variant=\"outlined\" color=\"default\">US News</Button>\n                        </div>\n\n                        <NavLink to=\"/\">\n                            <Link component=\"button\" variant=\"body2\">Go Back</Link>\n                        </NavLink>\n\n                        <div className={classes.root} >\n                            <Grid container spacing={3}>\n                                {topStories.map((topstory) => (\n                                    <Grid item xs={12} sm={4} key={topstory.url}>\n                                        <TopStory topstory={topstory} />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </div>\n                    </>\n                )}\n        </>\n    );\n}\n\nTopStories.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    topStories: PropTypes.array.isRequired,\n};\n\nexport default TopStories;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst Search = ({ searchArticles }) => {\n    const [text, setText] = useState('');\n    const handleChange = (e) => {\n        setText(e.target.value);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchArticles(text);\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n            <TextField\n                    label=\"Search articles\"\n                    type=\"text\"\n                    name=\"text\"\n                    value={text}\n                    onChange={handleChange}\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment>\n                            <IconButton>\n                                <SearchIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    )\n                }}\n                />\n            </form>\n        </div>\n    );\n};\n\nSearch.propTypes = {\n    searchArticles: PropTypes.func.isRequired,\n}\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport NavBar from './components/layouts/NavBar';\nimport { Articles, TopStories, Search } from './components';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [articles, setArticles] = useState([]);\n  const [topStories, setTopStories] = useState([]);\n\n  useEffect(() => {\n    const getArticles = async () => {\n      setLoading(true);\n      const res = await axios.get(` https://api.nytimes.com/svc/search/v2/articlesearch.json?fq=section_name:(\"Front Page\")&sort=newest&api-key=${process.env.REACT_APP_NYTIMES_API_KEY}`);\n      setArticles(res.data.response.docs);\n      setLoading(false);\n    };\n    getArticles();\n  }, []);\n\n  const searchArticles = async (text) => {\n    setLoading(true);\n    const res = await axios.get(`https://api.nytimes.com/svc/search/v2/articlesearch.json?q=${text}&api-key=${process.env.REACT_APP_NYTIMES_API_KEY}`);\n    setArticles(res.data.response.docs);\n    setLoading(false);\n  };\n\n  const getTopArticles = async (section) => {\n    setLoading(true);\n    const res = await axios.get(`https://api.nytimes.com/svc/topstories/v2/${section}.json?api-key=${process.env.REACT_APP_NYTIMES_API_KEY}`);\n    setTopStories(res.data.results);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <Typography color=\"textPrimary\" gutterBottom variant=\"h2\" align=\"center\">\n          <Switch>\n            <Route exact path=\"/\" render={() => (\n              <>\n                <Search searchArticles={searchArticles} />\n                <NavLink to=\"/topstories\">\n                  <Link component=\"button\" variant=\"body2\">Go to top stories in World, Tech and U.S</Link>\n                </NavLink>\n                <Articles loading={loading} articles={articles} />\n              </>\n            )} />\n\n            <Route exact path=\"/topstories\" render={() => (\n              <>\n                <TopStories loading={loading} topStories={topStories} getTopArticles={getTopArticles} />\n              </>\n            )} />\n\n          </Switch>\n        </Typography>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n\n  // https://api.nytimes.com/svc/topstories/v2/world.json?api-key=\n  // https://api.nytimes.com/svc/search/v2/articlesearch.json?q=technology&api-key=\n  //https://api.nytimes.com/svc/search/v2/articlesearch.json?q=technology&api-key=","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.REACT_APP_NYTIMES_API_KEY}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}